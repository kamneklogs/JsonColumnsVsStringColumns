// <auto-generated />
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JsonColumnsVsStringColumns.Migrations
{
    [DbContext(typeof(JsonColumnsContext))]
    [Migration("20240115033747_ChangeColumnType")]
    partial class ChangeColumnType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ObjectA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("WithJsonColumns");
                });

            modelBuilder.Entity("ObjectB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NestedObjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WithString");
                });

            modelBuilder.Entity("ObjectA", b =>
                {
                    b.OwnsOne("NestedObject", "NestedObject", b1 =>
                        {
                            b1.Property<int>("ObjectAId")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Values")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ObjectAId");

                            b1.ToTable("WithJsonColumns");

                            b1.WithOwner()
                                .HasForeignKey("ObjectAId");
                        });

                    b.Navigation("NestedObject")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
